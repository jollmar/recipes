---
import type { CollectionEntry } from "astro:content";
import { SITE_TITLE } from "../consts";
import Search from "./Search";

interface Props {
  recipes: CollectionEntry<"recipes">[];
}
const { recipes } = Astro.props;
const recipesUnderEvaluation = recipes.filter(
  (recipe) => recipe.data.evaluation
);
const keeperRecipes = recipes.filter((recipe) => !recipe.data.evaluation);
const pathname = new URL(Astro.request.url).pathname;
const currentPath = pathname.slice(1);
---

<div class="drawer drawer-mobile">
  <input id="my-drawer-3" type="checkbox" class="drawer-toggle" />
  <div class="drawer-content flex flex-col">
    <!-- Navbar -->
    <div
      class="sticky top-0 z-30 flex h-16 w-full justify-center bg-opacity-90 backdrop-blur transition-all duration-100 bg-base-100 text-base-content shadow-sm"
    >
      <div class="w-full navbar bg-primary shadow-md">
        <div class="flex-none lg:hidden">
          <label for="my-drawer-3" class="btn btn-square btn-ghost">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              class="inline-block w-6 h-6 stroke-white"
              ><path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M4 6h16M4 12h16M4 18h16"></path></svg
            >
          </label>
        </div>
        <div class="ml-auto">
          <Search recipes={recipes} client:load />
        </div>
      </div>
    </div>
    <div class="p-10">
      <slot />
    </div>
  </div>
  <div class="drawer-side">
    <label for="my-drawer-3" class="drawer-overlay"></label>
    <div class="menu p-4 w-80 bg-base-200">
      <h1 class="mt-2 mb-4 font-bold">{SITE_TITLE}</h1>
      <ul class="text-base-content">
        {
          keeperRecipes &&
            keeperRecipes.map((recipe) => (
              <li>
                <a
                  class={
                    currentPath === `recipes/${recipe.slug}/` ||
                    currentPath === `recipes/${recipe.slug}`
                      ? "active"
                      : ""
                  }
                  href={`/recipes/${recipe.slug}/`}
                >
                  {recipe.data.title}
                </a>
              </li>
            ))
        }
      </ul>

      {
        recipesUnderEvaluation.length > 0 && (
          <>
            <h2 class="mt-2 mb-4 font-bold">Under utv√§rdering</h2>
            <ul class="text-base-content">
              {recipesUnderEvaluation.map((recipe) => (
                <li>
                  <a
                    class={
                      currentPath === `recipes/${recipe.slug}/` ||
                      currentPath === `recipes/${recipe.slug}`
                        ? "active"
                        : ""
                    }
                    href={`/recipes/${recipe.slug}/`}
                  >
                    {recipe.data.title}
                  </a>
                </li>
              ))}
            </ul>
          </>
        )
      }
    </div>
  </div>
</div>
